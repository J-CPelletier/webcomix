name: Build

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * 0


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        poetry-version: ["1.1.15"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-$
          restore-keys: |
            poetry-$
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          poetry install
      - name: Build
        run: poetry build
      - name: Run tests
        run: |
          poetry run pytest --check-supported-comics --cov=webcomix
          poetry run mypy . --ignore-missing-imports
      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: poetry run coveralls
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-$
          restore-keys: |
            poetry-$
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          poetry install
      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build
        run: poetry build
      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
      - name: Publish package on GitHub Releases
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: webcomix ${{ github.ref }}
          body: |
              ## Changelog
              * Insert change here
          draft: true
          prerelease: false
      - name: Upload wheel
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/webcomix-${{ env.RELEASE_VERSION }}-py3-none-any.whl
          asset_name: webcomix-${{ env.RELEASE_VERSION }}-py3-none-any.whl
          tag: ${{ github.ref }}
      - name: Upload tarball
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/webcomix-${{ env.RELEASE_VERSION }}.tar.gz
          asset_name: webcomix-${{ env.RELEASE_VERSION }}.tar.gz
          tag: ${{ github.ref }}
